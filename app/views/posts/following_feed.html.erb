<div id="following-container">
  <div id="following-mid-container">

    <% @sorted_feed.each do |post| %>

      <div id="following-post-container">
        <% user = User.find(post.user_id) %>

        <div id="following-user-info-div">
          <% if user.avatar.attached? %> 
            <div class="following-avatar background-image" style="background-image: url('<%= url_for(user.avatar) %>');"></div>
          <% else %>
            <div class="following-avatar background-image" style="background-image: url('<%= "/assets/default_profile.jpg" %>');"></div>
          <% end %>

          <p><%= link_to user.username, user, class: "following-header-username" %></p>
        </div>

        <% if post.class.method_defined? :image %>
          <div>
            <div class="following-feed-image background-image" style="background-image: url('<%= url_for(post.image) %>');">
            
            </div>
          </div>
        <% elsif post.class.method_defined? :clip %>
          <div class="video-container">
            <%= video_tag url_for(post.clip), controls: "", class: "following-feed-video" %>
          </div>
        <% end %>

        <div class="following-activity-options following-pad">
          <div class="following-activity-lc">
            <% if post.class.method_defined? :image %>
              <% like_exists = Like.where(post_id: post.id, user_id: current_user.id) == [] ? "Like" : "Unlike" %>

              <%= link_to like_exists, ajax_likes_update_like_path(id: post.id, type: "post", html_id: "likeable_id_#{post.id}", html_count_id: "like_count#{post.id}"), method: :put, remote: true, id: "likeable_id_#{post.id}", class: "following-like-link foll-activity-link" %>
            <% elsif post.class.method_defined? :clip %>   
              <% like_exists = Like.where(video_post_id: post.id, user_id: current_user.id) == [] ? "Like" : "Unlike" %>

              <%= link_to like_exists, ajax_likes_update_like_path(id: post.id, type: "video post", html_id: "likeable_id_#{post.id}", html_count_id: "like_count#{post.id}"), method: :put, remote: true, id: "likeable_id_#{post.id}", class: "following-like-link foll-activity-link" %>
            <% end %>

            <%= link_to post do %>
              <i class="far fa-comment foll-activity-link"></i>
            <% end %>          
          </div>

          <% unless current_user === user %>
            <% if post.class.method_defined? :image %>
              <% save_exists = SavedPost.where(user_id: current_user.id, post_id: post.id) === [] ? "Add" : "Remove" %>

              <%= link_to save_exists, ajax_saved_posts_saved_post_path(user_id: current_user.id, id: post.id, type: "image", html_id: "saveable_post_id_#{post.id}"), method: :put, remote: true, id: "saveable_post_id_#{post.id}", class: "foll-activity-link" %>
            <% elsif post.class.method_defined? :clip %>
                <% save_exists = SavedPost.where(user_id: current_user.id, video_post_id: post.id) === [] ? "Add" : "Remove" %>

                <%= link_to save_exists, ajax_saved_posts_saved_post_path(user_id: current_user.id, id: post.id, type: "video", html_id: "saveable_video_post_id_#{post.id}"), method: :put, remote: true, id: "saveable_video_post_id_#{post.id}", class: "foll-activity-link" %>
            <% end %>
          <% else %>
            <div></div>
          <% end %>
        </div>

        <div class="following-pad">
          <h3 id=<%= "like_count#{post.id}" %> class="following-base-fsize">
            <%= "#{post.likes.count} Like".pluralize(post.likes.count) %>
          </h3>
        </div>

        <div class="following-pad">
          <p class="following-base-fsize"><strong><%= link_to user.username, user, class: "following-header-username" %></strong> <%= post.caption %></p>
        </div>
        
        <% unless post.comments.count === 0 %>
          <div>
            <%= link_to "View all #{post.comments.count} " + "comment".pluralize(post.comments.count), post, class: "following-pad following-base-fsize following-gray-txt" %>

            <% post.comments.limit(3).each do |comment| %>
              <% user_com = User.find(comment.user_id) %>

              <p class="following-pad following-base-fsize">
                <strong>
                  <%= link_to user_com.username, user_com, class: "following-header-username" %>
                </strong> <%= comment.body.length > 50 ? "#{comment.body[0..119]}..." : comment.body %>
              </p>
            <% end %>
          </div>
        <% end %>

        <div class="following-pad following-pdate following-gray-txt">
          <%= "#{time_ago_in_words(post.created_at)} ago"  %>
        </div>
      </div>

    <% end %>
  </div>
</div>